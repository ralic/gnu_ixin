NEWS for IXIN
See end for copying conditions.


- 1.4 | NOT YET RELEASED

  - specification moved from README into its own document

	Sometimes it's impossible to resist the urge to bloviate...
	Relatedly, you can "make check" there, too.  See subdir spec/.

	Probably, over time, more of README will follow.

	The spec document includes a new section "Terminology", not in
	the original README, for general terms.

  - out w/ "two-letter indices", in w/ "document-term sets"

	This de-emphasizes the two-letter nature, and bumps out the word
	"index" (already very heavily used), to reduce confusion.  As a
	bonus, the string length of both old and new terms and their
	acronyms remain the same (18 and 3, respectively) -- woo hoo!

  - DTS "default font" and "inverse default font" specifiable

	Each (non-empty) DTS now has an initial form that includes
	"default font" (a symbol, ‘r’ or ‘code’).  An entry now may
	specify "inverse default font" with the symbol ‘-’ (hyphen)
	in its first position.

	Concurrently, DTS-INDEX now omits DTS-COUNT, as that has moved
	into the DTS initial form.

  - META ‘titlepage’ now uses SXML ‘insertcopying’

	Previously, the "link" was the string "@insertcopying".
	Now, it is the SXML ‘(insertcopying (@))’.

  - META last element now TOC

	This used to be the "remaining SXML after ‘titlepage’".  Now it
	is a list of symbols in the set: ‘contents’, ‘shortcontents’,
	‘summarycontents’.

  - automagic processing specified for three old-style txi* vars

	These ‘@set/@clear VAR’ are converted to ‘@SETTING on/off’:

	txicodequoteundirected     codequoteundirected
	txicodequotebacktick       codequotebacktick
	txideftypefnnl             deftypefnnewline

	For example, see d/serveez.ixin META.

  - S-TREE moved forward, immediately after NODE-INDEX

	We want to move the optional portions (DTS) later, such that
	future addition of new portions can be more uniform (via "tail
	stretching").  This is a design-aesthetic, upward-compatability,
	hand-wavy, out-of-our-gourd reason, admittedly...

	Also, this block is now called the "sectioning tree".

  - doc d/prob.xml includes combining chars and cyrillic

	Hmmm, is it valid XML to use combining chars when there are
	alternatives?  (See comment in doc.)

  - new specification / support for "float sets"

	The new "floset" (‘float’ and ‘listoffloat’) handling is
	analogous to that of "dts" (‘indexterm’ and ‘printindex’).

  - new specification / support for "image inlining"

	The specification allows for any detectable image type, using
	MIME ‘image/TYPE’.  The tools support, however, is limited to
	mkixin guessing ‘image/png’ or ‘image/jpeg’, based on file
	extension.  Since the data is inlined into node data, retrieve
	does nothing special w/ it.


- 1.3 | 2012-12-11

  - changes to the distribution

    - ChangeLog files included

	Previous omission was an oversight.

    - programs now in c/ (control), documents in d/ (data)

	Things were getting difficult to see on one dired screen.

  - mkixin renamed from a2ixin, handles only .sxml

	Handling both .xml and .sxml was a feature not central to the
	purpose of IXIN (the project).  Distractions be gone!

  - mkixin processes all files

	Instead of ‘for f in F1 F2... ; do ./mkixin $f ; done’,
	you can simply do ‘./mkixin F1 F2...’.

  - node data now almost-SXML (text)

	Node data is no longer written gzipped and base64-encoded.
	Now it is simply text (ATTRS ELEMENT...), plus trailing newline.

	To get a valid SXML element, ‘read’ it and cons ‘node’ to it.
	This what retrieve commands ‘show-node’ and (repl) ‘show’ do.
	In contrast, ‘dump’, ‘dump/abbrev’ and ‘dump-node’ do not.

	Relatedly, ‘dump/abbrev’ now takes N-BYTES instead of COLUMNS.

  - new top-level block: "two-letter" indices

	Zero or more of these may appear between INDEX and NODES.
	Correspondingly, the TLI in COUNTS now has additional
	byte-length and entry-count info.  See README.

  - new top-level block: section tree

	This is a single, recursively self-similar expression describing
	the "chapter structuring".  Correspondingly, COUNTS now includes
	the byte-length.  See README.

  - new doc: serveez.{xml,sxml,ixin}

	This is from GNU Serveez 0.2.0 (not yet released), which makes
	use of ‘@set txideftypefnnl’, in particular.  In serveez.ixin,
	this appears in the VARS section of META, somewhat weirdly,
	considering its semantics, but not entirely unexpected, given
	its syntax.  Sigh, bugward comp[au]tability issues...  :-/

  - new explorations re producing SXML w/o Guile

	See new header "producing SXML w/o Guile" in README.

  - META-divvying work-in-progress

	See new header "groupings" in README.


- 1.2 | 2012-12-03

  - bugfix: use ‘pretty-print’ also for index

	Previously, a node name could be incorrectly written in the index
	due to the lameness of ‘object->string’ (mentioned in release 1.1).
	You can see this by copying new file prob.xml into the previous
	release and running "make prob.ixin".  Contrast to the prob.ixin
	distributed in this release.

  - new retrieve command: dump-node

	This displays the raw node data for a selected node to stdout.
	To get the tree, do: ‘./retrieve ... | base64 -d | gzip -d’.

  - new retrieve command: repl

	This runs a simple command loop that reads from stdin and writes to
	stdout.  The program maintains a "current node", and recognizes
	some simple navigation and display commands.  Type ‘quit’ to quit.

	To see this in action, try "make demo-zow".  Add ‘ZOW=rcs’, e.g.,
	to choose rcs.ixin (defaults to alive.ixin if not specified).

  - ‘meta’ format defined

	Previously, it was simply the portion of the (input) SXML prior to
	the first ‘node’ element.  Now, it has the form:

	(ATTRS XID VARS SETTINGS COPYING TITLEPAGE ELEMENT...)

	This change is a move from underspecified to specified, so the
	version number of the format remains at 1.  See README.


- 1.1 | 2012-12-01

  - included in dist: .sxml, .ixin files

	This is for the benefit of Guile 2-only users, and those who
	choose not to install Mixp.  If you modify foo.xml, however, you
	will still need Mixp (or a fixed a1-nf3-guile2) to update the
	foo.sxml (optionally) and foo.ixin (certainly) files.

  - bugfix: ‘(ice-9 pretty-print)’ fix applied more/less deeply

	Previously, the ‘string-xrep’ fix was applied only when the
	object to be output was directly a string.  Now, we intervene
	for any object (subverting ‘object->string’), to be able to
	handle two compound types, list and vector, which themselves may
	contain strings (and thus must be walked).  So much for the
	"more deeply" side.

	The "less deeply" comes from the incomplete (application
	specific) coverage of compound types.  Everything besides
	string, list or vector is still shunted to ‘object->string’.
	This imposes a maintenance burden: should programs one day wish
	to pretty-print other compound types that involve ‘write’ or
	‘object->string’ on strings internally, the subversion needs
	to be appropriately updated.

	Anyway, this bug manifested in the improper output of:

	  (punct (@ (end-of-sentence "no")) "…")

	under Guile 1.8.7 (mangled ‘U+2026 HORIZONTAL ELLIPSES’), and
	possibly other places, where the form's xrep fits on one line.


- 1.0 | 2012-11-29
  - initial release



Copyright (C) 2012 Thien-Thi Nguyen

Copying and distribution of this file, with or without modification,
are permitted provided the copyright notice and this notice are preserved.

_________________________________
Local Variables:
mode: outline
outline-regexp: "\\([ ][ ]\\)*- "
End:
