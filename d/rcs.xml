<?xml version="1.0"?>
<!DOCTYPE texinfo PUBLIC "-//GNU//DTD TexinfoML V5.00//EN" "http://www.gnu.org/software/texinfo/dtd/5.00/texinfo.dtd">
<texinfo xml:lang="en">
<filename file="rcs.xml"></filename>
<preamble>\input texinfo @c -*-texinfo-*-
</preamble><!-- c %**start of header -->
<setfilename file="rcs.info" spaces=" ">rcs.info</setfilename>
<documentencoding encoding="UTF-8" spaces=" ">UTF-8</documentencoding>
<set name="UPDATED" line=" UPDATED 20 May 2012">20 May 2012</set>
<set name="UPDATED-MONTH" line=" UPDATED-MONTH May 2012">May 2012</set>
<set name="EDITION" line=" EDITION 5.8.157-2ee4">5.8.157-2ee4</set>
<set name="VERSION" line=" VERSION 5.8.157-2ee4">5.8.157-2ee4</set>
<settitle spaces=" ">GNU RCS 5.8.157-2ee4</settitle>
<syncodeindex from="vr" to="cp" line=" vr cp"></syncodeindex>
<syncodeindex from="fn" to="cp" line=" fn cp"></syncodeindex>
<!-- c %**end of header -->

<macro name="WFT" line=" WFT">Walter F.@tie{}Tichy
</macro>

<macro name="repo" line=" repo">RCS file
</macro>

<set name="SUPER" line=" SUPER grcs">grcs</set>
<macro name="super" line=" super">@rcscommand{@value{SUPER}}
</macro>

<macro name="TODO" line=" TODO">@*@strong{TODO:}@w{ }
</macro>

<alias new="rcscommand" existing="b" line=" rcscommand = b"></alias>

<macro name="usage" line=" usage {name, required-args}"><formalarg>name</formalarg><formalarg>required-args</formalarg>@cindex @rcscommand{\name\} invocation
@cindex invocation, @rcscommand{\name\}
@example
\name\ [options] \required-args\
@end example
</macro>

<macro name="noVN" line=" noVN {command}"><formalarg>command</formalarg>Note that @option{-V@var{n}} is @emph{not} a valid option for
@rcscommand{\command\}, in contrast to most other RCS commands
</macro>

<copying endspaces=" ">
<para>This manual is for GNU RCS (version 5.8.157-2ee4, 20 May 2012).
</para>
<para>Copyright &copyright; 2010-2012 Thien-Thi Nguyen
</para>
<quotation endspaces=" ">
<para>Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts.  A copy of the license is included in the appendix entitled
&textldquo;GNU Free Documentation License&textrdquo;.
</para></quotation>
</copying>

<dircategory spaces=" ">Version control</dircategory>
<direntry endspaces=" ">
<menuentry leadingtext="* "><menutitle separator=": ">RCS</menutitle><menunode separator=".                   ">(rcs)</menunode><menudescription><pre xml:space="preserve">GNU Revision Control System.
</pre></menudescription></menuentry></direntry>

<titlepage endspaces=" ">
<title spaces=" ">GNU RCS</title>
<subtitle spaces=" ">for version 5.8.157-2ee4, 20 May 2012</subtitle>
<author spaces=" ">Thien-Thi Nguyen</author>
<page></page>
<vskip> 0pt plus 1filll</vskip>
<insertcopying></insertcopying>
</titlepage>

<contents></contents>


<node name="Top" spaces=" "><nodename>Top</nodename><nodenext automatic="on">Overview</nodenext><nodeup automatic="on">(dir)</nodeup></node>
<top spaces=" "><sectiontitle>GNU RCS</sectiontitle>

<insertcopying></insertcopying>

<menu endspaces=" ">
<menuentry leadingtext="* "><menunode separator="::            ">Overview</menunode><menudescription><pre xml:space="preserve">General purpose and information.
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::               ">Usage</menunode><menudescription><pre xml:space="preserve">How to use RCS.
</pre></menudescription></menuentry><menucomment><pre xml:space="preserve">
</pre></menucomment><menuentry leadingtext="* "><menunode separator="::       ">Still missing</menunode><menudescription><pre xml:space="preserve">What RCS lacks, perhaps perpetually.
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::      ">Reporting bugs</menunode><menudescription><pre xml:space="preserve">Sending bug reports and feature suggestions.
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::             ">GNU FDL</menunode><menudescription><pre xml:space="preserve">Copying and sharing this documentation.
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Index</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menucomment><pre xml:space="preserve">
</pre></menucomment><detailmenu endspaces=" ">
<menucomment><pre xml:space="preserve">&textmdash; The Detailed Node Listing &textmdash;

Overview
</pre></menucomment><menuentry leadingtext="* "><menunode separator="::             ">Credits</menunode><menudescription><pre xml:space="preserve">Who did what, and when.
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::            ">Concepts</menunode><menudescription><pre xml:space="preserve">What is a revision?  How can RCS help?
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::          ">Quick tour</menunode><menudescription><pre xml:space="preserve">A hands-on introduction to using RCS.
</pre></menudescription></menuentry><menucomment><pre xml:space="preserve">
Usage
</pre></menucomment><menuentry leadingtext="* "><menunode separator="::">Common elements</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">ci</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">co</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">ident</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">merge</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcs</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcsclean</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcsdiff</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcsmerge</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rlog</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menucomment><pre xml:space="preserve">
Common elements
</pre></menucomment><menuentry leadingtext="* "><menunode separator="::">Revision options</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Date option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Description option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Substitution mode option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Misc common options</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Environment</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menucomment><pre xml:space="preserve">
</pre></menucomment></detailmenu>
</menu>

<!-- c - -->
</top>
<node name="Overview" spaces=" "><nodename>Overview</nodename><nodenext automatic="on">Usage</nodenext><nodeprev automatic="on">Top</nodeprev><nodeup automatic="on">Top</nodeup></node>
<chapter spaces=" "><sectiontitle>Overview</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">overview</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">comma-v file format</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">license</indexterm></cindex>

<para>GNU RCS (Revision Control System) manages multiple revisions of
files.  RCS can store, retrieve, log, identify, and merge revisions.
It is useful for files that are revised frequently, e.g. programs,
documentation, graphics, and papers.  It can handle text as well as
binary files, although functionality is reduced for the latter.
</para>
<para>A normal installation includes the commands: <b>ci</b>,
<b>co</b>, <b>ident</b>, <b>merge</b>,
<b>rcs</b>, <b>rcsclean</b>, <b>rcsdiff</b>,
<b>rcsmerge</b> and <b>rlog</b> (<pxref><xrefnodename>Usage</xrefnodename></pxref>).
These are small and fast programs (amenable to scripting) and indeed the
distribution also includes the script <b>rcsfreeze</b> showing
some of the possibilities.
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">projects, related</indexterm></cindex>
<para>RCS works with versions stored on a single filesystem or machine,
edited by one person at a time.  Other version control systems, such
as Bazaar (<url><urefurl>http:///www.gnu.org/software/bazaar</urefurl></url>), CVS,
Subversion, and Git, support distributed access in various ways.
Which is more appropriate depends on the task at hand.
</para>
<menu endspaces=" ">
<menuentry leadingtext="* "><menunode separator="::             ">Credits</menunode><menudescription><pre xml:space="preserve">Who did what, and when.
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::            ">Concepts</menunode><menudescription><pre xml:space="preserve">What is a revision?  How can RCS help?
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::          ">Quick tour</menunode><menudescription><pre xml:space="preserve">A hands-on introduction to using RCS.
</pre></menudescription></menuentry></menu>

<node name="Credits" spaces=" "><nodename>Credits</nodename><nodenext automatic="on">Concepts</nodenext><nodeup automatic="on">Overview</nodeup></node>
<section spaces=" "><sectiontitle>Credits</sectiontitle>
<cindex index="cp" spaces=" "><indexterm index="cp">history</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">credits</indexterm></cindex>

<cindex index="cp" spaces=" "><indexterm index="cp">Tichy, Walter F.</indexterm></cindex>
<para>RCS was designed and built by Walter F.&nbsp;Tichy of Purdue University.  RCS
version 3 was released in 1983.
</para>
<para>Adam Hammer, Thomas Narten, and Daniel Trinkle of Purdue supported RCS
through version 4.3, released in 1990.  Guy Harris of Sun contributed
many porting fixes.  Paul Eggert of System Development Corporation
contributed bug fixes and tuneups.  Jay Lepreau contributed 4.3BSD
support.
</para>
<para>Paul Eggert of Twin Sun wrote the changes for RCS versions 5.5 and
5.6 (1991).  Rich Braun of Kronos and Andy Glew of Intel contributed
ideas for new options.  Bill Hahn of Stratus contributed ideas for
setuid support.  Ideas for piece tables came from Joe Berkovitz of
Stratus and Walter F.&nbsp;Tichy.  Matt Cross of Stratus contributed test case
ideas.  Adam Hammer of Purdue QAed.
</para>
<para>Paul Eggert wrote most of the changes for RCS 5.7.  K.&nbsp;Richard
Pixley of Cygnus Support contributed several bug fixes.  Robert
Lupton of Princeton and Daniel Trinkle contributed ideas for
<samp>$Name</samp> expansion.  Brendan Kehoe of Cygnus Support suggested
rlog&textrsquo;s <option>-N</option> option.  Paul D.&nbsp;Smith of Data General
suggested improvements in option and error processing.  Adam Hammer
of Purdue QAed.
</para>
<para>Thien-Thi Nguyen is responsibile for RCS 5.8.  He modernized the code
base, build system, and manual pages, fixing some bugs on the way.  He
added standard <option>--help</option>, <option>--version</option> processing, and wrote
the documentation you are reading (gladly taking inspiration from the
paper<footnote><para>Source (troff) and several output formats are available
from the <url><urefurl>http://www.gnu.org/software/rcs/</urefurl><urefdesc spaces=" ">RCS homepage</urefdesc></url>.</para></footnote> and
manpages originally written by Walter F.&nbsp;Tichy).
</para>
</section>
<node name="Concepts" spaces=" "><nodename>Concepts</nodename><nodenext automatic="on">Quick tour</nodenext><nodeprev automatic="on">Credits</nodeprev><nodeup automatic="on">Overview</nodeup></node>
<section spaces=" "><sectiontitle>Concepts</sectiontitle>

<subsection spaces=" "><sectiontitle>Interaction model</sectiontitle>
<cindex index="cp" spaces=" "><indexterm index="cp">interaction model</indexterm></cindex>

<cindex index="cp" spaces=" "><indexterm index="cp">interaction model</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">model, interaction</indexterm></cindex>
<para>The interaction model is straightforward.  For each working file, you
initialize its RCS file once, then enter a cycle of
checkout, modification, and checkin operations.  Along the
way, you can tweak some of the RCS file&textrsquo;s metadata, as well.
All of this is done through RCS commands; you need not modify the
RCS file directly (and in fact you should probably avoid doing so lest
RCS become confused).
This model is somewhat analogous to using a library (of books).
With a library, you sign up for a library card (initialize),
then enter a cycle of taking a book home (checkout),
enjoying it (NB: <strong>without</strong> modification, one hopes),
and returning it to the library (checkin).
</para>
<para>Furthermore, you can compare revisions in the RCS file
against each other, examine the user- (hopefully high) quality
descriptions of the changes each revision embodies, merge
selected revisions, and so forth.
</para>
</subsection>
<subsection spaces=" "><sectiontitle>Working file</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">working file, instantiation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">instantiating a working file</indexterm></cindex>
<para>RCS commands operate on one pair of files at a time.  The
<dfn>working file</dfn> is what you normally view and edit (e.g., a
file of C programming language source code named <file>a.c</file>).
Because the working file&textrsquo;s contents can be extracted from
the RCS file (called <dfn>instantiating a working file</dfn>),
it can be safely deleted to regain some disk space.
</para>
</subsection>
<subsection spaces=" "><sectiontitle>RCS file</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">RCS file</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">description of working file</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">working file, description</indexterm></cindex>
<para>The <dfn>RCS file</dfn> is a separate file, conventionally placed in the
subdirectory <file>RCS</file>, wherein RCS commands organize the initial and
subsequent <dfn>revisions</dfn> of the working file, associating with each
revision a unique revision number along with the remembered particulars
of the checkin that produced it.  It also contains a <dfn>description</dfn>
of the working file and various other metadata, described below.
</para>
<para>The RCS file is also known (colloquially) as the &textldquo;comma-v file&textrdquo;,
due to its name often ending in <file>,v</file> (e.g., <file>a.c,v</file>).
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">revision number</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">branch number</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">number, revision</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">number, branch</indexterm></cindex>
<para>A <dfn>revision number</dfn> is a branch number followed by a dot followed by
an integer, and a <dfn>branch number</dfn> is an odd number of integers
separated by dot.  A revision number with one dot (implying a branch
number without any dots) is said to be <dfn>on the trunk</dfn>.  All integers
are positive.  For example:
</para>
<example endspaces=" ">
<pre xml:space="preserve">1.1         -- revision number for initial checkin (typically);
               branch number: 1

9.4.1.42    -- more complicated (perhaps after much gnarly hacking);
               branch number: 9.4.1

333.333.333 -- not a valid revision number;
               however, a perfectly valid branch number
</pre></example>

<noindent></noindent>
<para>The <dfn>branch point</dfn> of a non-trunk branch is the revision number
formed by removing the branch&textrsquo;s trailing integer.  To compute the
<dfn>next higher</dfn> branch or revision number, add one to the trailing
integer.  The highest-numbered revision on a branch is called the
<dfn>tip</dfn> of the branch (or <dfn>branch tip</dfn>).  Continuing the example:
</para>
<example endspaces=" ">
<pre xml:space="preserve">1.1         -- on trunk; no branch point;
               next higher branch number:   2
               next higher revision number: 1.2

9.4.1.42    -- not on trunk; branch point:  9.4
               next higher branch number:   9.4.2
               next higher revision number: 9.4.1.43

333.333.333 -- not on trunk; branch point:  333.333
               next higher branch number:   333.333.334
               next higher revision number: 333.333.333.1
</pre></example>

<noindent></noindent>
<cindex index="cp" spaces=" "><indexterm index="cp">tree of revisions</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">revisions, tree of</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">symbolic names</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">names, symbolic</indexterm></cindex>
<para>In addition to this &textldquo;tree&textrdquo; of thus-linked revisions, the RCS file
keeps track of the <dfn>default branch</dfn>, i.e., the branch whose tip
corresponds to the most recent checkin; as well as the <dfn>symbolic
names</dfn>, a list of associations between a user-supplied (and presumably
meaningful) symbol and an underlying branch or revision number.
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">access control policy</indexterm></cindex>
<para>The RCS file contains two pieces of information used to implement its
<dfn>access control policy</dfn>.  The first is a list of usernames.  If
non-empty, only those users listed can modify the RCS file (via RCS
commands).  The second is a list of <dfn>locks</dfn>, i.e., association
between a username and a revision number.  If a lock
<code><var>username</var>:<var>revno</var></code> exists, that means only <var>username</var>
may modify <var>revno</var> (that is, do a checkin operation to deposit the
next higher revision, or a higher revision number on the same branch as
<var>revno</var>).
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">compatability, RCS 2.x</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp"><samp>configure --enable-compat2</samp></indexterm></cindex>
<para><strong>Compatability Note</strong>:
RCS files made with RCS 2.x may also contain <dfn>suffix
information</dfn>.  If you run into such a file (unlikely, as that file
format became obsolete in 1982), you will need to rebuild RCS with
<samp>configure --enable-compat2</samp> to be able to read it.  Note that RCS
commands never write out suffix information, even with <samp>configure
--enable-compat2</samp>.
</para>
</subsection>
<subsection spaces=" "><sectiontitle>Fundamental operations</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">checkin</indexterm></cindex>
<para>The <dfn>checkin</dfn> operation records the contents of the working file in
the RCS file, assigning it a new (normally the next higher) revision
number and recording the username, timestamp, <dfn>state</dfn> (a short
symbol), and user-supplied <dfn>log message</dfn> (a textual description of
the changes leading to that revision).  It uses <b>diff</b> to
find the differences between the tip of the default branch and the
working file, thereby writing the minimal amount of information needed
to be able to recreate the contents of the previous tip.
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">checkout</indexterm></cindex>
<para>The <dfn>checkout</dfn> operation identifies a specific revision from the
RCS file and either displays the content to standard output or
instantiates a working file, overwriting any current instantiation
with the selected revision.  In either case, the content may
undergo <dfn>keyword expansion</dfn>, which replaces text of the
form <samp>$Keyword$</samp> with (possibly) different text comprising the
keyword and its <dfn>value</dfn>, depending on the current keyword expansion
mode (<pxref><xrefnodename>Substitution mode option</xrefnodename></pxref>).
</para>
</subsection>
<subsection spaces=" "><sectiontitle>Keywords</sectiontitle>

<para>The keywords and their values are:
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">keywords, table of</indexterm></cindex>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">Author</itemformat></item>
</tableterm><tableitem><para>The login name of the user who checked in the revision.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Date</itemformat></item>
</tableterm><tableitem><para>The date and time the revision was checked in.
May include an appended timezone offset.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Header</itemformat></item>
</tableterm><tableitem><para>A standard header containing the absolute RCS filename, the
revision number, the date and time, the author, the state, and the
locker (if locked).  May include an appended timezone offset.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Id</itemformat></item>
</tableterm><tableitem><para>Same as <samp>Header</samp>, except that only the
basename appears (no directory components).
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Locker</itemformat></item>
</tableterm><tableitem><para>The login name of the user who locked the revision (empty if not locked).
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Log</itemformat></item>
</tableterm><tableitem><para>The log message supplied during checkin, preceded by a header containing
the RCS filename, the revision number, the author, and the date
and time.  May include an appended timezone offset.
</para>
<para>Existing log messages are not replaced.
Instead, the new log message is inserted after <samp>$Log:...$</samp>.
This is useful for accumulating a complete change log in a source file.
</para>
<para>Each inserted line is prefixed by the string that prefixes the
<samp>$Log$</samp> line.  For example, if the <samp>$Log$</samp> line is
</para>
<example endspaces=" ">
<pre xml:space="preserve">// $Log: tan.cc $
</pre></example>

<noindent></noindent>
<para>then RCS prefixes each line of the log
with <samp>// </samp> (slash, slash, space).  This is useful for
languages with comments that go to the end of the line.
</para>
<para>The convention for other languages is to use a <samp> * </samp>
(space, asterisk, space) prefix inside a multiline comment.  For
example, the initial log comment of a C program conventionally
is of the following form:
</para>
<example endspaces=" ">
<pre xml:space="preserve"> /*
  * $Log$
  */
</pre></example>

<para>For backwards compatibility with older versions of RCS, if the log
prefix is <samp>/*</samp> or <samp>(*</samp> surrounded by optional white space,
inserted log lines contain a space instead of <samp>/</samp> or <samp>(</samp>;
however, this usage is obsolescent and should not be relied on.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Name</itemformat></item>
</tableterm><tableitem><para>The symbolic name used to check out the revision, if any.
For example, <samp>co -rJoe</samp> generates <samp>$Name: Joe $</samp>.
Plain <b>co</b> generates just <samp>$Name: $</samp>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">RCSfile</itemformat></item>
</tableterm><tableitem><para>The basename of the RCS file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Revision</itemformat></item>
</tableterm><tableitem><para>The revision number assigned to the revision.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">Source</itemformat></item>
</tableterm><tableitem><para>The absolute RCS filename.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">State</itemformat></item>
</tableterm><tableitem><para>The state assigned to the revision with the <option>-s</option> option
of <b>rcs</b> or <b>ci</b>.
</para></tableitem></tableentry></table>

</subsection>
</section>
<node name="Quick-tour" spaces=" "><nodename>Quick tour</nodename><nodeprev automatic="on">Concepts</nodeprev><nodeup automatic="on">Overview</nodeup></node>
<section spaces=" "><sectiontitle>Quick tour</sectiontitle>

<para>This section complements the preceding section (<pxref><xrefnodename>Concepts</xrefnodename></pxref>),
presenting a handful of RCS commands in quick succession.  For
details on individual RCS commands, <xref><xrefnodename>Usage</xrefnodename></xref>.
</para>
<para>Suppose you have a file <file>f.c</file> that you wish to put under
control of RCS.  If you have not already done so, make an <file>RCS</file>
directory with the command:
</para>
<example endspaces=" ">
<pre xml:space="preserve">mkdir RCS
</pre></example>

<noindent></noindent>
<para>Then invoke the checkin command:
</para>
<example endspaces=" ">
<pre xml:space="preserve">ci f.c
</pre></example>

<noindent></noindent>
<para>This command creates an RCS file in directory <file>RCS</file>, stores
<file>f.c</file> into it as revision 1.1, and deletes <file>f.c</file>.  It
also asks you for a description.  The description should be a
synopsis of the contents of the file.  All later checkin
commands will ask you for a log entry, which should summarize
the changes that you made.
</para>
<para>To get back the working file <file>f.c</file> in the previous example,
use the checkout command:
</para>
<example endspaces=" ">
<pre xml:space="preserve">co f.c
</pre></example>

<noindent></noindent>
<para>This command extracts the latest revision from the RCS file
and writes it into <file>f.c</file>.  If you want to edit <file>f.c</file>,
you must lock it as you check it out, with the command:
</para>
<example endspaces=" ">
<pre xml:space="preserve">co -l f.c
</pre></example>

<noindent></noindent>
<para>You can now edit <file>f.c</file>.  Suppose after some editing you want to
know what changes that you have made.  The command:
</para>
<example endspaces=" ">
<pre xml:space="preserve">rcsdiff f.c
</pre></example>

<noindent></noindent>
<para>tells you the difference between the most recently checked-in
version and the working file.  You can check the file back in
by invoking:
</para>
<example endspaces=" ">
<pre xml:space="preserve">ci f.c
</pre></example>

<noindent></noindent>
<para>This increments the revision number properly.
If <b>ci</b> complains with the message:
</para>
<example endspaces=" ">
<pre xml:space="preserve">ci error: no lock set by your name
</pre></example>

<noindent></noindent>
<para>then you have tried to check in a file even though you did not
lock it when you checked it out.  Of course, it is too late now
to do the checkout with locking, because another checkout
would overwrite your modifications.  Instead, invoke:
</para>
<example endspaces=" ">
<pre xml:space="preserve">rcs -l f.c
</pre></example>

<noindent></noindent>
<para>This command will lock the latest revision for you, unless
somebody else got ahead of you already.  In this case, you&textrsquo;ll
have to negotiate with that person.
</para>
<para>Locking assures that you, and only you, can check in the next
update, and avoids nasty problems if several people work on the
same file.  Even if a revision is locked, it can still be
checked out for reading, compiling, etc.  All that locking
prevents is a checkin by anybody but the locker.
</para>
<para>If your RCS file is private, i.e., if you are the only person
who is going to deposit revisions into it, strict locking is
not needed and you can turn it off.  If strict locking is
turned off, the owner of the RCS file need not have a lock
for checkin; all others still do.  Turning strict locking off
and on is done with the commands:
</para>
<example endspaces=" ">
<pre xml:space="preserve">rcs -U f.c    # disable strict locking
rcs -L f.c    # enable strict locking
</pre></example>

<para>If you don&textrsquo;t want to clutter your working directory with
RCS files, create a subdirectory called <file>RCS</file> in your working
directory, and move all your RCS files there.  RCS commands
will look first into that directory to find needed files.  All
the commands discussed above will still work, without any
modification.  <xref><xrefnodename>Common elements</xrefnodename></xref>.
</para>
<para>To avoid the deletion of the working file during checkin (in
case you want to continue editing or compiling), invoke one of:
</para>
<example endspaces=" ">
<pre xml:space="preserve">ci -l f.c     # checkin + locked checkout
ci -u f.c     # checkin + unlocked checkout
</pre></example>

<noindent></noindent>
<para>These commands check in <file>f.c</file> as usual, then perform an
implicit checkout.  The first form also locks the checked in
revision, the second one doesn&textrsquo;t.  Thus, these options save you
one checkout operation.  The first form is useful if you want
to continue editing, the second one if you just want to read
the file.  Both update the keyword substitutions in your
working file <pxref><xrefnodename>Concepts</xrefnodename></pxref>.
</para>
<para>You can give <b>ci</b> the number you want assigned to a
checked-in revision.  Assume all your revisions were numbered
1.1, 1.2, 1.3, etc., and you would like to start release 2.
Either of the commands:
</para>
<example endspaces=" ">
<pre xml:space="preserve">ci -r2 f.c
ci -r2.1 f.c
</pre></example>

<noindent></noindent>
<para>assigns the number 2.1 to the new revision.  From then on,
<b>ci</b> will number the subsequent revisions with 2.2,
2.3, etc.  The corresponding <b>co</b> commands:
</para>
<example endspaces=" ">
<pre xml:space="preserve">co -r2 f.c
co -r2.1 f.c
</pre></example>

<noindent></noindent>
<para>retrieve the latest revision numbered 2.x and the revision 2.1,
respectively.  <b>co</b> without a revision number
selects the latest revision on the trunk, i.e. the highest
revision with a number consisting of two fields.  Numbers with
more than two fields are needed for branches.  For example, to
start a branch at revision 1.3, invoke:
</para>
<example endspaces=" ">
<pre xml:space="preserve">ci -r1.3.1 f.c
</pre></example>

<noindent></noindent>
<para>This command starts a branch numbered 1 at revision 1.3, and
assigns the number 1.3.1.1 to the new revision.  Here is a diagram
showing the new revision in relation to its branch and the trunk.
</para>
<example endspaces=" ">
<pre xml:space="preserve">1.1  --  1.2  --  1.3  --  1.4  --  1.5
                   |
                [1.3.1]  --  1.3.1.1
</pre></example>

<noindent></noindent>
<para>For more information about branches, <xref><xrefnodename>Concepts</xrefnodename></xref>.
</para>

<!-- c - -->
</section>
</chapter>
<node name="Usage" spaces=" "><nodename>Usage</nodename><nodenext automatic="on">Still missing</nodenext><nodeprev automatic="on">Overview</nodeprev><nodeup automatic="on">Top</nodeup></node>
<chapter spaces=" "><sectiontitle>Usage</sectiontitle>

<para>This chapter describes how to invoke RCS commands, including common
command-line elements, as well options specific to each command.
Starting with RCS 5.9, the special command <b>grcs</b> is the preferred
<dfn>dispatch program</dfn> for some of the other commands.
</para>
<menu endspaces=" ">
<menuentry leadingtext="* "><menunode separator="::">grcs</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Common elements</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">ci</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">co</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">ident</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">merge</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcs</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcsclean</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcsdiff</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rcsmerge</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">rlog</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry></menu>

<node name="grcs" spaces=" "><nodename>grcs</nodename><nodenext automatic="on">Common elements</nodenext><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>grcs</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>grcs</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>grcs</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">grcs [options] command [command-arg...]
</pre></example>

<noindent></noindent>
<para>The <b>grcs</b> command is a <dfn>dispatch program</dfn> for some of the other
commands.  Practically, that means that rather than invoking some
command directly from the shell as <var>command</var>, you would instead
invoke <b>grcs</b>, specifying <var>command</var> as the first arg, followed
by <var>command</var>-specific args.
</para>
<example endspaces=" ">
<pre xml:space="preserve"># standalone
$ rlog <var>filename</var>

# with the dispatch program
$ grcs rlog <var>filename</var>
</pre></example>

<para>Although the extra typing is a drawback, using <b>grcs</b> confers
some advantages:
</para>
<table commandarg="asis" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="asis">aliases</itemformat></item>
</tableterm><tableitem><para>In the example above, we could have written
</para><example endspaces=" ">
<pre xml:space="preserve">$ grcs log <var>filename</var>
</pre></example>
<noindent></noindent>
<para>where <samp>log</samp> is an <dfn>alias</dfn> for <samp>rlog</samp>.
See <option>--commands</option> below.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis">congruence with conteporary VCSes</itemformat></item>
</tableterm><tableitem><para>These days, version control systems almost universally use a dispatch
program of some sort.  Combined with aliases, this can help you slide
from RCS to another VCS (and back) more easily.
</para></tableitem></tableentry></table>

<noindent></noindent>
<para>For these reasons, <b>grcs</b> is here to stay.  Perhaps more importantly,
commands as standalone programs will be withdrawn in a future RCS
release.  The sooner you adapt scripts to use <b>grcs</b> the better.
</para>
<para>Aside from <option>--help</option> and <option>--version</option>, <b>grcs</b> also takes
<option>--commands</option>, which displays the available commands (and their
aliases) and exits.
</para>
</section>
<node name="Common-elements" spaces=" "><nodename>Common elements</nodename><nodenext automatic="on">ci</nodenext><nodeprev automatic="on">grcs</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Common elements</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">command help</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">command version</indexterm></cindex>
<noindent></noindent>
<para>All RCS commands accept <option>--help</option> and <option>--version</option>.
<xref><xrefnodename>Command-Line Interfaces</xrefnodename><xrefinfofile>standards</xrefinfofile><xrefprintedname>The GNU Coding Standards</xrefprintedname></xref>.
</para>
<para>Aside from <option>--help</option> and <option>--version</option>, RCS commands take the
form <samp>-<var>letter</var>[<var>arg</var>]</samp>, i.e., a hyphen followed by a
single letter, optionally followed by extra information.  The square
braces mean that the extra information is optional.  (No square braces
means that the extra information is required.)  In any case, when
specified, the extra information <strong>must</strong> abut the letter; there
can be no intervening whitespace.
</para>
<example endspaces=" ">
<pre xml:space="preserve">co -u 1.4 foo   # wrong, space between -u and 1.4
co -u1.4  foo   # ok
</pre></example>

<noindent></noindent>
<cindex index="cp" spaces=" "><indexterm index="cp">order of options and file names</indexterm></cindex>
<para>Furthermore, options must appear before file names (if any) on the
command line.
</para>
<example endspaces=" ">
<pre xml:space="preserve">ident foo -q    # wrong, option after file name
ident -q foo    # ok
</pre></example>

<noindent></noindent>
<cindex index="cp" spaces=" "><indexterm index="cp">pairing RCS and working files</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">file names on the command-line</indexterm></cindex>
<para>Lastly, pairs of RCS and working files can be specified
in three ways: (a) both are given, (b) only the working file is
given, (c) only the RCS file is given.  For (a), both
RCS and working files may have arbitrary directory
components; RCS commands pair them up intelligently.  For (b),
RCS commands will look first into the directory <file>./RCS</file>,
if it exists, to find the associated RCS file.
</para>
<menu endspaces=" ">
<menuentry leadingtext="* "><menunode separator="::">Revision options</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Date option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Description option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Substitution mode option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Log message option</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Misc common options</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry><menuentry leadingtext="* "><menunode separator="::">Environment</menunode><menudescription><pre xml:space="preserve">
</pre></menudescription></menuentry></menu>

<node name="Revision-options" spaces=" "><nodename>Revision options</nodename><nodenext automatic="on">Date option</nodenext><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Revision options</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">command-line option to specify a revision</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">specifying a revision</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">revision, specifying</indexterm></cindex>

<para>As to be expected in a revision control system,
many options are of the form <samp>-<var>flag</var>[<var>rev</var>]</samp>,
where <var>flag</var> is a single letter (e.g., <samp>r</samp>).
If ommitted, <var>rev</var> defaults to the latest revision
on the default branch.
A revision can be specified in many ways:
</para>
<table commandarg="asis" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="asis"><var>br</var>.<var>n</var></itemformat></item>
</tableterm><tableitem><para>Straightforward dot-notation, where <var>br</var> specifies the branch.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis">.<var>n</var></itemformat></item>
</tableterm><tableitem><para>Like <var>br</var>.<var>n</var>, using the default branch.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><var>br</var></itemformat></item>
</tableterm><tableitem><para>Like <var>br</var>.<var>n</var>, using the a command-specific computation of
<var>n</var>, given the current tip <var>i</var>.
For <b>ci</b> (<pxref><xrefnodename>ci</xrefnodename></pxref>), <var>n</var> would be <code><var>i</var> + 1</code>,
while for other commands <var>n</var> would be simply <var>i</var>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><var>name</var></itemformat></item>
</tableterm><tableitem><para>This is the symbolic name of a revision, as assigned previously by a
<command>ci -n</command> or <command>ci -N</command> command.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code>$</code></itemformat></item>
</tableterm><tableitem><para>The command computes the effective revision by examining the values of
keyword expansions in the working file.
</para></tableitem></tableentry></table>

<cindex index="cp" spaces=" "><indexterm index="cp">specifying a range of revisions</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">revision range, specifying</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">range of revisions, specifying</indexterm></cindex>
<noindent></noindent>
<para>For commands that accept a range of revisions, the syntax is
generally <code><var>rev1</var>:<var>rev2</var></code>, i.e., two revisions
(specified as described above) separated by a colon.
</para>
</subsection>
<node name="Date-option" spaces=" "><nodename>Date option</nodename><nodenext automatic="on">Description option</nodenext><nodeprev automatic="on">Revision options</nodeprev><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Date option</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">specifying a date</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">specifying a time/date</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">date, specifying</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">time/date, specifying</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">date formats</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">time zone</indexterm></cindex>

<para>Some commands accept an option of the form <samp>-d<var>date</var></samp> to
specify a <dfn>date</dfn>, an absolute point in time (to second resolution),
expressed in a <dfn>date format</dfn>.  These also accept <samp>-z<var>zone</var></samp>
to specify the timezone.  The special value <samp>LT</samp> stands for the
<dfn>local time zone</dfn>.  RCS recognizes many date formats and time
zones.  For example, the following dates are equivalent if local time is
January 11, 1990, 8pm Pacific Standard Time, eight hours west of
Coordinated Universal Time (UTC):
</para>
<example endspaces=" ">
<pre xml:space="preserve">8:00 pm lt
4:00 AM, Jan. 12, 1990           default is UTC
1990-01-12 04:00:00+00           ISO 8601 (UTC)
1990-01-11 20:00:00-08           ISO 8601 (local time)
1990/01/12 04:00:00              traditional RCS format
Thu Jan 11 20:00:00 1990 LT      output of ctime(3) + LT
Thu Jan 11 20:00:00 PST 1990     output of date(1)
Fri Jan 12 04:00:00 GMT 1990
Thu, 11 Jan 1990 20:00:00 -0800  Internet RFC 822
12-January-1990, 04:00 WET
</pre></example>

<noindent></noindent>
<para>Most fields in the date and time can be defaulted.  The default time
zone is normally UTC, but this can be overridden by the <option>-z</option>
option.  The other defaults are determined in the order year, month,
day, hour, minute, and second (most to least significant).  At least one
of these fields must be provided.  For omitted fields that are of higher
significance than the highest provided field, the time zone&textrsquo;s current
values are assumed.  For all other omitted fields, the lowest possible
values are assumed.  For example, without <option>-z</option>, the date
<samp>20, 10:30</samp> defaults to <samp>10:30:00 UTC</samp> of the 20th of the UTC
time zone&textrsquo;s current month and year.  Note that for the shell, the
date/time must be quoted if it contains spaces.
</para>
<para>RCS also accepts some other formats which specify only the date portion
(omitting the time portion):
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code"><var>YYYY</var>-<var>DDD</var></itemformat></item>
</tableterm><tableitem><para><var>DDD</var> is the day of year, 1-366.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code"><var>YYYY</var>-w<var>WW</var>-<var>D</var></itemformat></item>
</tableterm><tableitem><para><var>WW</var> is the ISO week number, 0-53 (actually, ISO
week numbers are 1-53; week 0 is a GNU RCS extension);
and <var>D</var> is the ISO day number, 1-7 (Monday through Sunday).
</para></tableitem></tableentry></table>

</subsection>
<node name="Description-option" spaces=" "><nodename>Description option</nodename><nodenext automatic="on">Substitution mode option</nodenext><nodeprev automatic="on">Date option</nodeprev><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Description option</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">specifying description text</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">description text, specifying</indexterm></cindex>

<para>Some commands accept an option of the form <samp>-t-<var>text</var></samp>
or <samp>-t<var>file-name</var></samp>.  This option is to set or update the
RCS file description text.  In the first form, <var>text</var> is used
directly, excluding the leading hyphen (<samp>-</samp>) that distinguishes the
two forms.  In the second form, the description text is taken from the
contents of <var>file-name</var>.
</para>
</subsection>
<node name="Substitution-mode-option" spaces=" "><nodename>Substitution mode option</nodename><nodenext automatic="on">Log message option</nodenext><nodeprev automatic="on">Description option</nodeprev><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Substitution mode option</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">specifying substitution mode</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">substitution mode, specifying</indexterm></cindex>

<para>Some commands accept an option of the form <option>-k<var>subst</var></option>, used
to control how keywords (<pxref><xrefnodename>Concepts</xrefnodename></pxref>) are expanded in the working
file.  In the following table of <var>subst</var> values, the example keyword
is <samp>Revision</samp> and its value is <samp>5.13</samp>.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">kv</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">substitution mode, default</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">keyword-value substitution mode</indexterm></cindex>
<para>Generate <samp>$Revision: 5.13 $</samp> (dollar-sign, keyword, colon, space,
value, space, dollar-sign).
A locker&textrsquo;s name is inserted in the value of the <code>Header</code>,
<code>Id</code> and <code>Locker</code> keyword strings only as a file is being locked,
i.e., by <command>ci -l</command> and <command>co -l</command>.
This is the default substitution mode.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">kvl</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">keyword-value-locker substitution mode</indexterm></cindex>
<para>Like <option>-kkv</option>, except that a locker&textrsquo;s name is always inserted
if the given revision is currently locked.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">k</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">keyword-only substitution mode</indexterm></cindex>
<para>Generate <samp>$Revision$</samp> (dollar-sign, keyword, dollar-sign).
This is useful when comparing different revisions of a file.  Log
messages are inserted after <code>Log</code> keywords even if <option>-kk</option> is
specified, since this tends to be more useful when merging changes.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">o</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">old-keyword-value substitution mode</indexterm></cindex>
<para>Like <option>-kkv</option>, but use the old value present in the working file
just before it was checked in.  This can be useful for file formats that
cannot tolerate any changes to substrings that happen to take the form
of keyword strings.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">b</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">binary-old-keyword-value substitution mode</indexterm></cindex>
<para>Like <option>-ko</option>, but do all file i/o in binary mode.  This makes
little difference on POSIX and Unix hosts, but on DOS-like hosts one
should use <command>rcs -i -kb</command> to initialize an RCS file intended to be
used for binary files.  Also, on all hosts, <b>rcsmerge</b> normally
refuses to merge files when <option>-kb</option> is in effect.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">v</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">value-only substitution mode</indexterm></cindex>
<para>Generate <samp>5.13</samp> (value only).  Further keyword substitution cannot
be performed once the keyword names are removed, so this should be used
with care.  Because of this danger of losing keywords, <option>-kv</option>
cannot be combined with <option>-l</option>, and the owner write permission of the
working file is turned off; to edit the file later, check it out again
without <option>-kv</option>.
</para></tableitem></tableentry></table>

</subsection>
<node name="Log-message-option" spaces=" "><nodename>Log message option</nodename><nodenext automatic="on">Misc common options</nodenext><nodeprev automatic="on">Substitution mode option</nodeprev><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Log message option</sectiontitle>

<para>Both <command>ci</command> and <command>rcs</command> allow a log message
to be specified with the <option>-m</option> option.
<cindex index="cp" spaces=" "><indexterm index="cp">empty log message</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">log message, empty</indexterm></cindex>
If the <var>msg</var> argument to this option is empty,
RCS uses the default <samp>*** empty log message ***</samp>.
This particular message is handled specially
(i.e., filtered out) by <command>rlog</command>.
</para>
</subsection>
<node name="Misc-common-options" spaces=" "><nodename>Misc common options</nodename><nodenext automatic="on">Environment</nodenext><nodeprev automatic="on">Log message option</nodeprev><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Misc common options</sectiontitle>

<para>Other common options are <option>-I</option>, <option>-q</option>, <option>-s</option>,
<option>-T</option>, <option>-V</option>, <option>-w</option>, <option>-x</option>.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-I</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">interactive mode</indexterm></cindex>
<para>This option enables <dfn>interactive mode</dfn>.
More precisely, it <strong>forces</strong> interactive mode, whereby RCS
commands believe that their standard input is a terminal, normally a
precondition for displaying a prompt to receive input (such as a log
message on checkin).
The intention of <option>-I</option> is for scripting situations where standard
input is actually not a terminal but you know beforehand (without
prompting) that input is needed and you are ready to provide it on
standard input anyway.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-q</itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">quiet mode</indexterm></cindex>
<para>This option enables <dfn>quiet mode</dfn>.
Commands work silently (unless there is an error condition),
and suppress warnings and prompts.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-s<var>state</var></itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">specifying a state</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">state, specifying</indexterm></cindex>
<para>Specify the state to be <var>state</var>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-T</itemformat></item>
</tableterm><tableitem><para>This option controls how commands timestamp the RCS file.
Normally, RCS commands set the RCS file&textrsquo;s timestamp when modifying it
in the &textldquo;natural&textrdquo; way (without taking any particular care).
With <option>-T</option>, on the other hand, the commands either preserve
the timestamp (for standalone lock/unlock operations), or use the
timestamp of the working file (for <b>ci</b>).
</para>
<para>This can be useful if the RCS file is found in a makefile target&textrsquo;s
list of prerequisites (<pxref><xrefnodename>Rule Syntax</xrefnodename><xrefinfofile>make</xrefinfofile><xrefprintedname>The GNU Make Manual</xrefprintedname></pxref>),
that is, if some target should be rebuilt if the RCS file is newer
than it.  In that case, you can do <samp>rcs -u -T</samp>, for example, to
unlock a revision in the RCS file without triggering a recompilation.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
</tableterm><tableitem><para>Behave like <option>--version</option>, i.e., display command version
information and exit successfully.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V<var>n</var></itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">emulation, previous RCS versions</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">RCS version emulation</indexterm></cindex>
<para><var>n</var> specifies the RCS (major) version to emulate.
Valid values for <var>n</var> are: 3, 4, 5.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-w<var>login</var></itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">specifying author</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">author, specifying</indexterm></cindex>
<para>Some commands accept an option of the form <samp>-w<var>login</var></samp>
to specify the login name of the author of a revision, i.e.,
&textldquo;who&textrdquo; is responsible.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></item>
</tableterm><tableitem><cindex index="cp" spaces=" "><indexterm index="cp">specifying a suffix list</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">suffix list, specifying</indexterm></cindex>
<para>Specify <var>suff</var> as the slash-separated list of file name suffixes
used to recognize an RCS file.  The default value is <samp>,v/</samp>, that
is, first try with <samp>,v</samp> then try with an empty suffix.
</para>
<para>This <dfn>basename search</dfn> occurs within (i.e., starting from the
beginning) the larger <dfn>directory search</dfn> loop, which comprises two
candidates: <file>d/RCS</file> and <file>d</file>, where <var>d</var> is the directory
component of the working file name.  For example, given the working file
<file>a.c</file> in the current directory, RCS tries, in order, these
candidates:
</para>
<example endspaces=" ">
<pre xml:space="preserve">./RCS/a.c,v
./RCS/a.c
./a.c,v
./a.c
</pre></example>

<para>Note that the last candidate is impossible (and is in fact discarded),
because the working and RCS files cannot have the same name.
</para></tableitem></tableentry></table>

</subsection>
<node name="Environment" spaces=" "><nodename>Environment</nodename><nodeprev automatic="on">Misc common options</nodeprev><nodeup automatic="on">Common elements</nodeup></node>
<subsection spaces=" "><sectiontitle>Environment</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">environment variables</indexterm></cindex>
<para>Various environment variables influence how RCS works.
</para>
<defvr spaces=" " endspaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">RCSINIT</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>RCSINIT</defvariable></definitionterm>
<definitionitem><para>Another way to set common options is with the <samp>RCSINIT</samp>
environment variable.  This is a space-separated list of options.
Use <samp>\</samp> (backslash) to escape significant space.  For example:
</para>
<example endspaces=" ">
<pre xml:space="preserve"># Set the value; make it available to subsequent commands.
RCSINIT=&quot;-q -x/,v -zLT&quot;
export RCSINIT

# Use it (implicitly).
rlog -L foo
</pre></example>

<noindent></noindent>
<para>This example, in Bourne shell syntax, arranges for RCS commands to
operate as if each command-line had prepended <samp>-q -x/,v -zLT</samp> to
the rest of the command-line.  The effective command-line that
<b>rlog</b> sees is thus <samp>-q -x/,v -zLT -L foo</samp>.
</para></definitionitem></defvr>

<defvr spaces=" " endspaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">RCS_MEM_LIMIT</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>RCS_MEM_LIMIT</defvariable></definitionterm>
<definitionitem><cindex index="cp" spaces=" "><indexterm index="cp">memory limit</indexterm></cindex>
<para>Normally, for speed, commands either memory map or copy into memory
the RCS file if its size is less than the <dfn>memory limit</dfn>, currently
defaulting to 256 kilobytes.  Otherwise the commands fall back to using
standard i/o routines.
</para>
<para>You can adjust the memory limit by setting the <samp>RCS_MEM_LIMIT</samp>
environment variable to a numeric value (measured in kilobytes).
An empty value is silently ignored.
</para></definitionitem></defvr>

<defvr spaces=" " endspaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">TMPDIR</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>TMPDIR</defvariable></definitionterm>
<defvrx spaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">TMP</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>TMP</defvariable></definitionterm></defvrx>
<defvrx spaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">TEMP</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>TEMP</defvariable></definitionterm></defvrx>
<definitionitem><para>Commands sometimes create temporary files, normally in
a system-dependent directory, such as <file>/tmp</file>.
You can override this directory by specifying another one as the value
of one of the environment variables <code>TMPDIR</code>, <code>TMP</code>, or
<code>TEMP</code> (checked in that order).
</para></definitionitem></defvr>

<defvr spaces=" " endspaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">LOGNAME</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>LOGNAME</defvariable></definitionterm>
<defvrx spaces=" "><definitionterm><indexterm index="vr" mergedindex="cp">USER</indexterm><defcategory bracketed="on">Environment Variable</defcategory> <defvariable>USER</defvariable></definitionterm></defvrx>
<definitionitem><para>Absent <option>-w<var>login</var></option>, or when <var>login</var> is omitted
(<pxref><xrefnodename>Misc common options</xrefnodename></pxref>), commands check environment variables
<code>LOGNAME</code> and <code>USER</code> (in that order).  If neither of these
are set, RCS queries the host for, and uses, your login.
</para></definitionitem></defvr>

</subsection>
</section>
<node name="ci" spaces=" "><nodename>ci</nodename><nodenext automatic="on">co</nodenext><nodeprev automatic="on">Common elements</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>ci</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>ci</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>ci</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">ci [options] file ...
</pre></example>

<noindent></noindent>
<para>The <b>ci</b> command adds a revision to the RCS file reflecting
the current state of the working file.  This operation is also known as
&textldquo;checkin&textrdquo;.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-f[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Force new entry, even if no content changed.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-I[<var>rev</var>]</itemformat></item>
<itemx spaces=" "><itemformat command="code">-q[<var>rev</var>]</itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-i[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Initial checkin; error if the RCS file already exists.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-j[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Just checkin, don&textrsquo;t initialize; error if the RCS file does not exist.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-k[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Compute revision from working file keywords.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-r</itemformat></item>
</tableterm><tableitem><para>Release lock and delete working file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-r<var>rev</var></itemformat></item>
</tableterm><tableitem><para>Do normal checkin.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-l[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Like <option>-r</option>, but immediately checkout locked (<command>co -l</command>) afterwards.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-u[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Like <option>-l</option>, but checkout unlocked (<command>co -u</command>).
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-M[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Reset working file mtime (relevant for <option>-l</option>, <option>-u</option>).
</para></tableitem></tableentry></table>

<noindent></noindent>
<para>Multiple flags in <code>-&lbrace;fiIjklMqru&rbrace;</code> may be given, except for
<option>-r</option>, <option>-l</option>, <option>-u</option>, which are mutually exclusive.
For a fully specified revision of the
form <code><var>br</var>.<var>n</var></code>, <var>n</var> must be greater
than any existing on <var>br</var>, or <var>br</var> must be new.
If <var>rev</var> is omitted, compute it from the last lock
(<command>co -l</command>), perhaps starting a new branch.
If there is no lock, use <code><var>defbr</var>.(L+1)</code>.
<xref><xrefnodename>Revision options</xrefnodename></xref>.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-d[<var>date</var>]</itemformat></item>
<itemx spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.  If no <var>date</var> specified,
use the working file modification time.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-m[<var>msg</var>]</itemformat></item>
</tableterm><tableitem><para>Use <var>msg</var> as the log message.  <xref><xrefnodename>Log message option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-n<var>name</var></itemformat></item>
<itemx spaces=" "><itemformat command="code">-N<var>name</var></itemformat></itemx>
</tableterm><tableitem><para>Assign symbolic <var>name</var> to the entry.
For <option>-n</option>, <var>name</var> must be new (no previous assignment).
For <option>-N</option>, overwrite any previous assignment.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-s<var>state</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.  Set the state.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-t-<var>text</var></itemformat></item>
<itemx spaces=" "><itemformat command="code">-t<var>file-name</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Description option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-T</itemformat></item>
</tableterm><tableitem><para>Set the RCS file&textrsquo;s modification time to the new revision&textrsquo;s
time if the former precedes the latter and there is a new
revision; preserve the RCS file&textrsquo;s modification time otherwise.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-w<var>who</var></itemformat></item>
</tableterm><tableitem><para>Use <var>who</var> as the author.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para></tableitem></tableentry></table>

</section>
<node name="co" spaces=" "><nodename>co</nodename><nodenext automatic="on">ident</nodenext><nodeprev automatic="on">ci</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>co</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>co</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>co</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">co [options] file ...
</pre></example>

<noindent></noindent>
<para>The <b>co</b> command retrieves a revision from the RCS file,
writing a new working file.  This operation is also known as &textldquo;checkout&textrdquo;.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-f[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Force overwrite of working file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-I[<var>rev</var>]</itemformat></item>
<itemx spaces=" "><itemformat command="code">-q[<var>rev</var>]</itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-p[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Write to stdout instead of the working file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-r[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Normal checkout.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-l[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Like <option>-r</option>, but also lock.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-u[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Like <option>-l</option>, but unlock.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-M[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Reset working file mtime (relevant for <option>-l</option>, <option>-u</option>).
</para></tableitem></tableentry></table>

<noindent></noindent>
<para>Multiple flags in <code>-&lbrace;fIlMpqru&rbrace;</code> may be given, except for
<option>-r</option>, <option>-l</option>, <option>-u</option>, which are mutually exclusive.
<xref><xrefnodename>Revision options</xrefnodename></xref>.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-k<var>subst</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Substitution mode option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-d<var>date</var></itemformat></item>
<itemx spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.
Select latest before or on <var>date</var>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-j<var>joins</var></itemformat></item>
</tableterm><tableitem><para>Merge using <var>joins</var>, a list of <code><var>rev</var>:<var>rev</var></code> pairs.
<strong>NB</strong>: This option is obsolete (<pxref><xrefnodename>rcsmerge</xrefnodename></pxref>).
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-s<var>state</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.  Select matching state.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-S</itemformat></item>
</tableterm><tableitem><para>Enable &quot;self-same&quot; mode.
In this mode, the owner of a lock is unimportant, just that it exists.
Effectively, this prevents you from checking out the same revision twice.
</para>
<example endspaces=" ">
<pre xml:space="preserve">$ whoami
ttn

$ co -l -f z
RCS/z,v  --&gt;  z
revision 1.1 (locked)
done

$ co -S -l -f z
RCS/z,v  --&gt;  z
co: RCS/z,v: Revision 1.1 is already locked by ttn.
</pre></example>

</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-T</itemformat></item>
</tableterm><tableitem><para>Preserve the modification time on the RCS file even if
it changes because a lock is added or removed.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-w<var>who</var></itemformat></item>
</tableterm><tableitem><para>Select matching login <var>who</var>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para></tableitem></tableentry></table>

</section>
<node name="ident" spaces=" "><nodename>ident</nodename><nodenext automatic="on">merge</nodenext><nodeprev automatic="on">co</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>ident</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>ident</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>ident</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">ident [options] [file ...]
</pre></example>

<noindent></noindent>
<para>If no <var>file</var> is specified, scan standard input.
The <b>ident</b> command scans its input for keywords
(<pxref><xrefnodename>Concepts</xrefnodename></pxref>), displaying to standard output what it finds.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-q</itemformat></item>
</tableterm><tableitem><para>Normally, if no patterns are found for a file, <b>ident</b>
emits a warning.  This option suppresses the warning.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.  Note that <option>-V<var>n</var></option> is <emph>not</emph> a valid option for
<b>ident</b>, in contrast to most other RCS commands.
</para></tableitem></tableentry></table>

<para>In addition to the normal keyword pattern, for Subversion 1.2
(and later) compatability<footnote><para>The <dfn>fixed-length keyword syntax</dfn>
is described in detail in
<uref><urefurl>http://svnbook.red-bean.com/en/1.5/svn-book.html#svn.advanced.props.special.keywords</urefurl><urefdesc spaces="\n"></urefdesc><urefreplacement>Version Control with Subversion</urefreplacement></uref>, chapter &textldquo;Advanced Topics&textrdquo;, section
&textldquo;Keyword Substitution&textrdquo;.</para></footnote>,
<b>ident</b> also recognizes patterns having one of the forms:
</para>
<example endspaces=" ">
<pre xml:space="preserve">$<var>keyword</var>:: <var>text</var> $
;; two colons and space after keyword
;; space before ending $

$<var>keyword</var>:: <var>text</var>#$
;; two colons and space after keyword
;; hash before ending $
</pre></example>

</section>
<node name="merge" spaces=" "><nodename>merge</nodename><nodenext automatic="on">rcs</nodenext><nodeprev automatic="on">ident</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>merge</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>merge</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>merge</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">merge [options] receiving-sibling parent other-sibling
</pre></example>

<noindent></noindent>
<para>The <b>merge</b> command combines the differences between a
the parent and the other sibling, and the differences between the
parent and the receiving sibling.  It writes the result to the
receiving sibling.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-A</itemformat></item>
<itemx spaces=" "><itemformat command="code">-E</itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-e</itemformat></itemx>
</tableterm><tableitem><para>Use <command>diff3</command> <option>-A</option>, <option>-E</option> (default), or <option>-e</option>,
respectively.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-p</itemformat></item>
</tableterm><tableitem><para>Write to stdout instead of overwriting <var>receiving-sibling</var>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-q</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.  Suppress conflict warnings.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-L<var>label</var></itemformat></item>
</tableterm><tableitem><para>(up to three times) Specify the conflict labels for
<var>receiving-sibling</var>, <var>parent</var> and <var>other-sibling</var>,
respectively.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.  Note that <option>-V<var>n</var></option> is <emph>not</emph> a valid option for
<b>merge</b>, in contrast to most other RCS commands.
</para></tableitem></tableentry></table>

</section>
<node name="rcs" spaces=" "><nodename>rcs</nodename><nodenext automatic="on">rcsclean</nodenext><nodeprev automatic="on">merge</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>rcs</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>rcs</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>rcs</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">rcs [options] file ...
</pre></example>

<noindent></noindent>
<para>The <b>rcs</b> command performs various administrative operations
on the RCS file, depending on the options given.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-i</itemformat></item>
</tableterm><tableitem><para>Create and initialize a new RCS file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-L</itemformat></item>
</tableterm><tableitem><para>Set strict locking.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-U</itemformat></item>
</tableterm><tableitem><para>Set non-strict locking.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-M</itemformat></item>
</tableterm><tableitem><para>Don&textrsquo;t send mail when breaking someone else&textrsquo;s lock.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-T</itemformat></item>
</tableterm><tableitem><para>Preserve the modification time on the RCS file
unless a revision is removed.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-I</itemformat></item>
<itemx spaces=" "><itemformat command="code">-q</itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-a<var>logins</var></itemformat></item>
</tableterm><tableitem><para>Append <var>logins</var> (comma-separated list of usernames) to access-list.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-e[<var>logins</var>]</itemformat></item>
</tableterm><tableitem><para>Erase <var>logins</var> (comma-separated list of usernames) from access-list.
If <var>logins</var> is omitted, clear the access-list.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-A<var>file-name</var></itemformat></item>
</tableterm><tableitem><para>Append access-list of <var>file-name</var> to current access-list.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-b[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Set default branch to that of <var>rev</var> or
highest branch on trunk if <var>rev</var> is omitted.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-l[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Lock a revision.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-u[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Unlock a revision.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-c<var>string</var></itemformat></item>
</tableterm><tableitem><para>Set comment leader to <var>string</var>.
<strong>NB</strong>: Don&textrsquo;t use; obsolete.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-k<var>subst</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Substitution mode option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-m<var>rev</var>:[<var>msg</var>]</itemformat></item>
</tableterm><tableitem><para>Replace log message with <var>msg</var>.  <xref><xrefnodename>Log message option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-n<var>name</var>[:[<var>rev</var>]]</itemformat></item>
</tableterm><tableitem><para>If <var>:rev</var> is omitted, delete symbolic <var>name</var>.
Otherwise, associate <var>name</var> with <var>rev</var>; <var>name</var> must be new.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-N<var>name</var>[:[<var>rev</var>]]</itemformat></item>
</tableterm><tableitem><para>Like <option>-n</option>, but overwrite any previous assignment.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-o<var>range</var></itemformat></item>
</tableterm><tableitem><para>Outdate revisions in <var>range</var>:
</para>
<table commandarg="asis" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="asis"><var>rev</var></itemformat></item>
</tableterm><tableitem><para>single revision
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><var>br</var></itemformat></item>
</tableterm><tableitem><para>latest revision on branch <var>br</var>
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code><var>rev1</var>:<var>rev2</var></code></itemformat></item>
</tableterm><tableitem><para><var>rev1</var> to <var>rev2</var> on same branch, inclusive
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code>:<var>rev</var></code></itemformat></item>
</tableterm><tableitem><para>beginning of branch to <var>rev</var>
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code><var>rev</var>:</code></itemformat></item>
</tableterm><tableitem><para><var>rev</var> to end of branch
</para></tableitem></tableentry></table>

</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-s<var>state</var>[:<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.  Set state.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-t-<var>text</var></itemformat></item>
<itemx spaces=" "><itemformat command="code">-t<var>file-name</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Description option</xrefnodename></xref>.  Replace description.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></item>
</tableterm><tableitem><para>No effect; included for compatibility with other commands.
</para></tableitem></tableentry></table>

</section>
<node name="rcsclean" spaces=" "><nodename>rcsclean</nodename><nodenext automatic="on">rcsdiff</nodenext><nodeprev automatic="on">rcs</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>rcsclean</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>rcsclean</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>rcsclean</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">rcsclean [options] [file ...]
</pre></example>

<noindent></noindent>
<para>The <b>rcsclean</b> command removes working files that are not being
worked on.  If given <option>-u</option>, it also unlocks and removes working files
that are being worked on but have not changed.
If no <var>file</var> is specified, operate on all the working files in the
current directory.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-r[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Specify revision.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-u[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Unlock if is locked and no differences found.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-n[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Dry run (no act, don&textrsquo;t operate).
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-q[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-k<var>subst</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Substitution mode option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-T</itemformat></item>
</tableterm><tableitem><para>Preserve the modification time on the RCS file even
it changes because a lock is removed.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.
</para></tableitem></tableentry></table>

</section>
<node name="rcsdiff" spaces=" "><nodename>rcsdiff</nodename><nodenext automatic="on">rcsmerge</nodenext><nodeprev automatic="on">rcsclean</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>rcsdiff</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>rcsdiff</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>rcsdiff</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">rcsdiff [options] file ...
</pre></example>

<noindent></noindent>
<para>The <b>rcsdiff</b> command runs <b>diff</b>
to compare two revisions in an RCS file.
<xref><xrefnodename>Invoking diff</xrefnodename><xrefinfofile>diff</xrefinfofile><xrefprintedname>The GNU Diffutils Manaual</xrefprintedname></xref>.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-r<var>rev</var></itemformat></item>
</tableterm><tableitem><para>(zero, one, or two times) Name a revision.
If given two revisions (<samp>-r<var>rev1</var> -r<var>rev2</var></samp>),
compare those revisions.
If given only one revision (<samp>-r<var>rev</var></samp>),
compare the working file with it.
If given no revisions, compare the working file with the latest
revision on the default branch.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-k<var>subst</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Substitution mode option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-q</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.
</para></tableitem></tableentry></table>

<noindent></noindent>
<para>Additionally, the following options (and their argument, if any) are
passed to the underlying <b>diff</b> command:
</para>
<example endspaces=" ">
<pre xml:space="preserve">-0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -B, -C, -D, -F, -H, -I,
-L, -U, -W, -a, -b, -c, -d, -e, -f, -h, -i, -n, -p, -t, -u, -w, -y,
long options (that start with &quot;--&quot;)
</pre></example>

<noindent></noindent>
<para>(Not all of these options are meaningful.)
</para>
</section>
<node name="rcsmerge" spaces=" "><nodename>rcsmerge</nodename><nodenext automatic="on">rlog</nodenext><nodeprev automatic="on">rcsdiff</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>rcsmerge</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>rcsmerge</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>rcsmerge</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">rcsmerge [options] file
</pre></example>

<noindent></noindent>
<para>The <b>rcsmerge</b> command incorporates the changes between two
revisions of an RCS file into the corresponding working file.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-p[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para>Write to stdout instead of overwriting the working file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-q[<var>rev</var>]</itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-r<var>rev</var></itemformat></item>
</tableterm><tableitem><para>(one or two times) specify a revision.
</para></tableitem></tableentry></table>

<noindent></noindent>
<para>One or two revisions must be specified
(using <option>-p</option>, <option>-q</option>, <option>-r</option>).
If only one is specified, the second revision defaults
to the latest revision on the default branch.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-k<var>subst</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Substitution mode option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.
</para></tableitem></tableentry></table>

</section>
<node name="rlog" spaces=" "><nodename>rlog</nodename><nodeprev automatic="on">rcsmerge</nodeprev><nodeup automatic="on">Usage</nodeup></node>
<section spaces=" "><sectiontitle>Invoking <b>rlog</b></sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp"><b>rlog</b> invocation</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">invocation, <b>rlog</b></indexterm></cindex>
<example endspaces=" ">
<pre xml:space="preserve">rlog [options] file ...
</pre></example>

<noindent></noindent>
<para>The <b>rlog</b> command displays information about RCS files.
</para>
<table commandarg="code" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="code">-L</itemformat></item>
</tableterm><tableitem><para>Ignore RCS files with no locks set.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-R</itemformat></item>
</tableterm><tableitem><para>Print only the name of the RCS file.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-h</itemformat></item>
</tableterm><tableitem><para>Print only the &textldquo;header&textrdquo; information.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-t</itemformat></item>
</tableterm><tableitem><para>Like <option>-h</option>, but also include the description.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-N</itemformat></item>
</tableterm><tableitem><para>Omit symbolic names.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-b</itemformat></item>
</tableterm><tableitem><para>Select the default branch.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-d<var>dates</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.  Select revisions based on timestamp,
in the range <var>dates</var>, with spec:
</para>
<table commandarg="asis" spaces=" " endspaces=" ">
<tableentry><tableterm><item spaces=" "><itemformat command="asis"><var>d</var></itemformat></item>
</tableterm><tableitem><para>single revision <var>d</var> or earlier
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code><var>d1</var>&lt;<var>d2</var></code></itemformat></item>
<itemx spaces=" "><itemformat command="asis"><code><var>d2</var>&gt;<var>d1</var></code></itemformat></itemx>
</tableterm><tableitem><para>between <var>d1</var> and <var>d2</var>, exclusive
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code>&lt;<var>d</var></code></itemformat></item>
<itemx spaces=" "><itemformat command="asis"><code><var>d</var>&gt;</code></itemformat></itemx>
</tableterm><tableitem><para>before <var>d</var>
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="asis"><code>&gt;<var>d</var></code></itemformat></item>
<itemx spaces=" "><itemformat command="asis"><code><var>d</var>&lt;</code></itemformat></itemx>
</tableterm><tableitem><para>after <var>d</var>
</para></tableitem></tableentry></table>

<para>Instead of <samp>&lt;</samp> or <samp>&gt;</samp>, you can use <samp>&lt;=</samp> or <samp>&gt;=</samp>,
respectively, to specify inclusive ranges.
<var>dates</var> may also be a list of semicolon-separated specs.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-l[<var>who</var>]</itemformat></item>
</tableterm><tableitem><para>Select revisions locked by <var>who</var> (comma-separated list of usernames)
only, or by anyone if <var>who</var> is omitted.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-r[<var>revs</var>]</itemformat></item>
</tableterm><tableitem><para>Select revisions in <var>revs</var>, a comma-separated list of
range specs, one of: <var>rev</var>, <code><var>rev</var>:</code>,
<code>:<var>rev</var></code>, <code><var>rev1</var>:<var>rev2</var></code>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-s<var>states</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
<var>states</var> can also be a comma-separated list of states.
Select revisions with specified state(s).
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-w[<var>who</var>]</itemformat></item>
</tableterm><tableitem><para>Select revisions checked in by <var>who</var> (comma-separated list of usernames),
or by the user if <var>who</var> is omitted.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-V</itemformat></item>
<itemx spaces=" "><itemformat command="code">-V<var>n</var></itemformat></itemx>
<itemx spaces=" "><itemformat command="code">-x<var>suff</var></itemformat></itemx>
</tableterm><tableitem><para><xref><xrefnodename>Misc common options</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-z<var>zone</var></itemformat></item>
</tableterm><tableitem><para><xref><xrefnodename>Date option</xrefnodename></xref>.
</para>
</tableitem></tableentry><tableentry><tableterm><item spaces=" "><itemformat command="code">-q</itemformat></item>
</tableterm><tableitem><para>No effect, included for consistency with other commands.
</para></tableitem></tableentry></table>


<!-- c - -->
</section>
</chapter>
<node name="Still-missing" spaces=" "><nodename>Still missing</nodename><nodenext automatic="on">Reporting bugs</nodenext><nodeprev automatic="on">Usage</nodeprev><nodeup automatic="on">Top</nodeup></node>
<chapter spaces=" "><sectiontitle>Still missing</sectiontitle>
<cindex index="cp" spaces=" "><indexterm index="cp">features, still missing</indexterm></cindex>

<para>RCS is still missing some features.  The following is an unordered list
of &textldquo;to-do musings&textrdquo; kept by the RCS maintainers.  If you would like to
hack on an item, <xref><xrefnodename>Reporting bugs</xrefnodename></xref>.
</para>
<itemize commandarg="bullet" endspaces=" ">
<beforefirstitem>
</beforefirstitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add an option to <b>rcsmerge</b> so that it can use an arbitrary
program to do the 3-way merge, instead of the default <b>merge</b>.
Likewise for <b>rcsdiff</b> and <b>diff</b>.  It should be
possible to pass arbitrary options to these programs, and to the subsidiary
<b>co</b> invocations.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add format options for finer control over the output of
<b>ident</b> and <b>rlog</b>.  E.g. there should be an easy way
for rlog to output lines like <samp>src/main.c 2.4 wft</samp>, one for each locked
revision.  <b>rlog</b> options should have three orthogonal types:
selecting files, selecting revisions, and selecting rlog format.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add format options for finer control over the output of keyword
strings.  E.g. there should be some way to prepend <samp>&arobase;(#)</samp>, and
there should be some way to change <samp>$</samp> to some other character to
disable further substitution.  These options should make the resulting
files uneditable, like <samp>-kv</samp>.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add long options, e.g. <option>--keyword-substitution</option>.
Unfortunately RCS&textrsquo;s option syntax is incompatible with getopt.  Perhaps
the best way is to overload <b>rcs</b>, e.g., <samp>rcs diff
--keyword-substitution=old file</samp> instead of <samp>rcsdiff -ko file</samp>.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para><command>rlog -rM:N</command> should work even if <var>M</var> and <var>N</var> have
different numbers of fields, so long as <var>M</var> is an ancestor of
<var>N</var> or vice versa.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para><b>rcs</b> should evaluate options in order;
this allows <command>rcs -oS -nS</command>.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Be able to redo your most recent checkin with minor changes.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para><command>co -u</command> shouldn&textrsquo;t complain about a <samp>+w</samp> working
file if contents don&textrsquo;t change.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add a <samp>-</samp> option to take the list of file names from
standard input.  Perhaps the file names should be null-terminated, not
newline-terminated, so that those that contain newlines are handled
properly.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Permit multiple option&textndash;filename pairs,
e.g., <command>co -r1.4 a -r1.5 b</command>.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add an option to break a symbolic link to an RCS file,
instead of breaking the hard link that it points to.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add ways to specify the earliest revision, the most recent
revision, the earliest or latest revision on a particular branch, and
the parent or child of some other revision.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>If a user has multiple locks, perhaps <b>ci</b> should fall
back on the method of <command>ci -k</command> to figure out which revision to use.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add an option to <b>rcsclean</b> to clean directories recursively.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Write an <b>rcsck</b> program that repairs corrupted RCS files,
much as fsck repairs corrupted file systems.  For example, it should
remove stale lock files.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Update the date parser to use the more modern <file>getdate.y</file>
by Bellovin, Salz, and Berets, or the even more modern <code>getdate</code> by
Moraes.  None of these getdate implementations are as robust as RCS&textrsquo;s
old warhorse in avoiding problems like arithmetic overflow, so they&textrsquo;ll
have to be fixed first.  (Perhaps we can use gnulib module <code>getdate</code>.)
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Break up the code into a library so that it&textrsquo;s easier to write
new programs that manipulate RCS files, and so that useless code is
removed from the existing programs.  For example, the <b>rcs</b>
command contains unnecessary keyword substitution baggage, and the
<b>merge</b> command can be greatly pruned.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Make it easier to use your favorite text editor to edit log
messages, etc., instead of having to type them in irretrievably at the
terminal.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Let the user specify a search path for default branches,
e.g., to use <var>L</var> as the default branch if it works, and <var>M</var>
otherwise.  Let the user require that at least one entry in the
search path works.  Let the user say that later entries in the
search path are read only, i.e. one cannot check in changes to them.
This should be an option settable by <samp>RCSINIT</samp>.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add a way for a user to see which revisions affected which lines.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Have <command>rlog -nN F</command> print just the revision number that
<var>N</var> translates to.  E.g., <command>rlog -nB. F</command> would print the highest
revision on the branch B.  Use this to add an option <option>-bB</option> to
rcsbranch, to freeze the named branch.  This should interact well with
default branches.
</para>
</listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Add a <b>co</b> option that prints the revision number before
each line, as SCCS&textrsquo;s <command>get -m</command> does.
[I implemented this for Emacs 22 as a subroutine
of <code>vc-annotate</code>, q.v.  &textmdash;ttn]
</para>
</listitem></itemize>


<!-- c - -->
</chapter>
<node name="Reporting-bugs" spaces=" "><nodename>Reporting bugs</nodename><nodenext automatic="on">GNU FDL</nodenext><nodeprev automatic="on">Still missing</nodeprev><nodeup automatic="on">Top</nodeup></node>
<chapter spaces=" "><sectiontitle>Reporting bugs</sectiontitle>

<cindex index="cp" spaces=" "><indexterm index="cp">bug reporting</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">problems</indexterm></cindex>
<cindex index="cp" spaces=" "><indexterm index="cp">reporting bugs</indexterm></cindex>

<para>To report bugs or suggest enhancements for GNU RCS, please
visit its homepage (<url><urefurl>http://www.gnu.org/software/rcs/</urefurl></url>)
to find directions on how to &textldquo;file a bug report&textrdquo; online,
or send electronic mail to <email><emailaddress>help-rcs&arobase;gnu.org</emailaddress></email>.
(If you use the web interface, you don&textrsquo;t need to also send email,
since that is done automatically.)
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">checklist for bug reports</indexterm></cindex>
<para>For bug reports, please include enough information for the maintainers
to reproduce the problem.  Generally speaking, that means:
</para>
<itemize commandarg="bullet" spaces=" " endspaces=" "><itemprepend><formattingcommand command="bullet" /></itemprepend>
<listitem spaces=" "><prepend>&bullet;</prepend><para>The RCS version, command(s) and manual section(s) involved.
</para></listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Hardware and operating system names and versions.
</para></listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>The contents of any input files necessary to reproduce the bug.
</para></listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>The expected behavior and/or output.
</para></listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>A description of the problem and samples of any erroneous output.
</para></listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Options you gave to <command>configure</command> other than specifying
      installation directories.
</para></listitem><listitem spaces=" "><prepend>&bullet;</prepend><para>Anything else that you think would be helpful.
</para></listitem></itemize>

<para>When in doubt whether something is needed or not, include it.  It&textrsquo;s
better to include too much than to leave out something important.
</para>
<cindex index="cp" spaces=" "><indexterm index="cp">patches, contributing</indexterm></cindex>
<para>Patches are welcome; if possible, please make them with
<samp>git format-patch</samp> and
include <file>ChangeLog</file> entries (<pxref><xrefnodename>Change Log</xrefnodename><xrefinfofile spaces=" ">emacs</xrefinfofile><xrefprintedname spaces=" ">The GNU
Emacs Manual</xrefprintedname></pxref>).  Please follow the existing coding style.
</para>

<!-- c - -->
</chapter>
<node name="GNU-FDL" spaces=" "><nodename>GNU FDL</nodename><nodenext automatic="on">Index</nodenext><nodeprev automatic="on">Reporting bugs</nodeprev><nodeup automatic="on">Top</nodeup></node>
<appendix spaces=" "><sectiontitle>GNU Free Documentation License</sectiontitle>

<!-- c The GNU Free Documentation License. -->
<center spaces=" ">Version 1.3, 3 November 2008</center>

<!-- c This file is intended to be included within another document, -->
<!-- c hence no sectioning command or @node. -->

<display endspaces=" ">
<pre xml:space="preserve">Copyright &copyright; 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
<uref><urefurl>http://fsf.org/</urefurl></uref>

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
</pre></display>

<enumerate spaces=" " endspaces=" "><enumeratefirst>0</enumeratefirst>
<listitem>
<para>PREAMBLE
</para>
<para>The purpose of this License is to make a manual, textbook, or other
functional and useful document <dfn>free</dfn> in the sense of freedom: to
assure everyone the effective freedom to copy and redistribute it,
with or without modifying it, either commercially or noncommercially.
Secondarily, this License preserves for the author and publisher a way
to get credit for their work, while not being considered responsible
for modifications made by others.
</para>
<para>This License is a kind of &textldquo;copyleft&textrdquo;, which means that derivative
works of the document must themselves be free in the same sense.  It
complements the GNU General Public License, which is a copyleft
license designed for free software.
</para>
<para>We have designed this License in order to use it for manuals for free
software, because free software needs free documentation: a free
program should come with manuals providing the same freedoms that the
software does.  But this License is not limited to software manuals;
it can be used for any textual work, regardless of subject matter or
whether it is published as a printed book.  We recommend this License
principally for works whose purpose is instruction or reference.
</para>
</listitem><listitem>
<para>APPLICABILITY AND DEFINITIONS
</para>
<para>This License applies to any manual or other work, in any medium, that
contains a notice placed by the copyright holder saying it can be
distributed under the terms of this License.  Such a notice grants a
world-wide, royalty-free license, unlimited in duration, to use that
work under the conditions stated herein.  The &textldquo;Document&textrdquo;, below,
refers to any such manual or work.  Any member of the public is a
licensee, and is addressed as &textldquo;you&textrdquo;.  You accept the license if you
copy, modify or distribute the work in a way requiring permission
under copyright law.
</para>
<para>A &textldquo;Modified Version&textrdquo; of the Document means any work containing the
Document or a portion of it, either copied verbatim, or with
modifications and/or translated into another language.
</para>
<para>A &textldquo;Secondary Section&textrdquo; is a named appendix or a front-matter section
of the Document that deals exclusively with the relationship of the
publishers or authors of the Document to the Document&textrsquo;s overall
subject (or to related matters) and contains nothing that could fall
directly within that overall subject.  (Thus, if the Document is in
part a textbook of mathematics, a Secondary Section may not explain
any mathematics.)  The relationship could be a matter of historical
connection with the subject or with related matters, or of legal,
commercial, philosophical, ethical or political position regarding
them.
</para>
<para>The &textldquo;Invariant Sections&textrdquo; are certain Secondary Sections whose titles
are designated, as being those of Invariant Sections, in the notice
that says that the Document is released under this License.  If a
section does not fit the above definition of Secondary then it is not
allowed to be designated as Invariant.  The Document may contain zero
Invariant Sections.  If the Document does not identify any Invariant
Sections then there are none.
</para>
<para>The &textldquo;Cover Texts&textrdquo; are certain short passages of text that are listed,
as Front-Cover Texts or Back-Cover Texts, in the notice that says that
the Document is released under this License.  A Front-Cover Text may
be at most 5 words, and a Back-Cover Text may be at most 25 words.
</para>
<para>A &textldquo;Transparent&textrdquo; copy of the Document means a machine-readable copy,
represented in a format whose specification is available to the
general public, that is suitable for revising the document
straightforwardly with generic text editors or (for images composed of
pixels) generic paint programs or (for drawings) some widely available
drawing editor, and that is suitable for input to text formatters or
for automatic translation to a variety of formats suitable for input
to text formatters.  A copy made in an otherwise Transparent file
format whose markup, or absence of markup, has been arranged to thwart
or discourage subsequent modification by readers is not Transparent.
An image format is not Transparent if used for any substantial amount
of text.  A copy that is not &textldquo;Transparent&textrdquo; is called &textldquo;Opaque&textrdquo;.
</para>
<para>Examples of suitable formats for Transparent copies include plain
ASCII without markup, Texinfo input format, La&tex; input
format, SGML or XML using a publicly available
DTD, and standard-conforming simple HTML,
PostScript or PDF designed for human modification.  Examples
of transparent image formats include PNG, XCF and
JPG.  Opaque formats include proprietary formats that can be
read and edited only by proprietary word processors, SGML or
XML for which the DTD and/or processing tools are
not generally available, and the machine-generated HTML,
PostScript or PDF produced by some word processors for
output purposes only.
</para>
<para>The &textldquo;Title Page&textrdquo; means, for a printed book, the title page itself,
plus such following pages as are needed to hold, legibly, the material
this License requires to appear in the title page.  For works in
formats which do not have any title page as such, &textldquo;Title Page&textrdquo; means
the text near the most prominent appearance of the work&textrsquo;s title,
preceding the beginning of the body of the text.
</para>
<para>The &textldquo;publisher&textrdquo; means any person or entity that distributes copies
of the Document to the public.
</para>
<para>A section &textldquo;Entitled XYZ&textrdquo; means a named subunit of the Document whose
title either is precisely XYZ or contains XYZ in parentheses following
text that translates XYZ in another language.  (Here XYZ stands for a
specific section name mentioned below, such as &textldquo;Acknowledgements&textrdquo;,
&textldquo;Dedications&textrdquo;, &textldquo;Endorsements&textrdquo;, or &textldquo;History&textrdquo;.)  To &textldquo;Preserve the Title&textrdquo;
of such a section when you modify the Document means that it remains a
section &textldquo;Entitled XYZ&textrdquo; according to this definition.
</para>
<para>The Document may include Warranty Disclaimers next to the notice which
states that this License applies to the Document.  These Warranty
Disclaimers are considered to be included by reference in this
License, but only as regards disclaiming warranties: any other
implication that these Warranty Disclaimers may have is void and has
no effect on the meaning of this License.
</para>
</listitem><listitem>
<para>VERBATIM COPYING
</para>
<para>You may copy and distribute the Document in any medium, either
commercially or noncommercially, provided that this License, the
copyright notices, and the license notice saying this License applies
to the Document are reproduced in all copies, and that you add no other
conditions whatsoever to those of this License.  You may not use
technical measures to obstruct or control the reading or further
copying of the copies you make or distribute.  However, you may accept
compensation in exchange for copies.  If you distribute a large enough
number of copies you must also follow the conditions in section 3.
</para>
<para>You may also lend copies, under the same conditions stated above, and
you may publicly display copies.
</para>
</listitem><listitem>
<para>COPYING IN QUANTITY
</para>
<para>If you publish printed copies (or copies in media that commonly have
printed covers) of the Document, numbering more than 100, and the
Document&textrsquo;s license notice requires Cover Texts, you must enclose the
copies in covers that carry, clearly and legibly, all these Cover
Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on
the back cover.  Both covers must also clearly and legibly identify
you as the publisher of these copies.  The front cover must present
the full title with all words of the title equally prominent and
visible.  You may add other material on the covers in addition.
Copying with changes limited to the covers, as long as they preserve
the title of the Document and satisfy these conditions, can be treated
as verbatim copying in other respects.
</para>
<para>If the required texts for either cover are too voluminous to fit
legibly, you should put the first ones listed (as many as fit
reasonably) on the actual cover, and continue the rest onto adjacent
pages.
</para>
<para>If you publish or distribute Opaque copies of the Document numbering
more than 100, you must either include a machine-readable Transparent
copy along with each Opaque copy, or state in or with each Opaque copy
a computer-network location from which the general network-using
public has access to download using public-standard network protocols
a complete Transparent copy of the Document, free of added material.
If you use the latter option, you must take reasonably prudent steps,
when you begin distribution of Opaque copies in quantity, to ensure
that this Transparent copy will remain thus accessible at the stated
location until at least one year after the last time you distribute an
Opaque copy (directly or through your agents or retailers) of that
edition to the public.
</para>
<para>It is requested, but not required, that you contact the authors of the
Document well before redistributing any large number of copies, to give
them a chance to provide you with an updated version of the Document.
</para>
</listitem><listitem>
<para>MODIFICATIONS
</para>
<para>You may copy and distribute a Modified Version of the Document under
the conditions of sections 2 and 3 above, provided that you release
the Modified Version under precisely this License, with the Modified
Version filling the role of the Document, thus licensing distribution
and modification of the Modified Version to whoever possesses a copy
of it.  In addition, you must do these things in the Modified Version:
</para>
<enumerate first="A" spaces=" " endspaces=" "><enumeratefirst>A</enumeratefirst>
<listitem>
<para>Use in the Title Page (and on the covers, if any) a title distinct
from that of the Document, and from those of previous versions
(which should, if there were any, be listed in the History section
of the Document).  You may use the same title as a previous version
if the original publisher of that version gives permission.
</para>
</listitem><listitem>
<para>List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified
Version, together with at least five of the principal authors of the
Document (all of its principal authors, if it has fewer than five),
unless they release you from this requirement.
</para>
</listitem><listitem>
<para>State on the Title page the name of the publisher of the
Modified Version, as the publisher.
</para>
</listitem><listitem>
<para>Preserve all the copyright notices of the Document.
</para>
</listitem><listitem>
<para>Add an appropriate copyright notice for your modifications
adjacent to the other copyright notices.
</para>
</listitem><listitem>
<para>Include, immediately after the copyright notices, a license notice
giving the public permission to use the Modified Version under the
terms of this License, in the form shown in the Addendum below.
</para>
</listitem><listitem>
<para>Preserve in that license notice the full lists of Invariant Sections
and required Cover Texts given in the Document&textrsquo;s license notice.
</para>
</listitem><listitem>
<para>Include an unaltered copy of this License.
</para>
</listitem><listitem>
<para>Preserve the section Entitled &textldquo;History&textrdquo;, Preserve its Title, and add
to it an item stating at least the title, year, new authors, and
publisher of the Modified Version as given on the Title Page.  If
there is no section Entitled &textldquo;History&textrdquo; in the Document, create one
stating the title, year, authors, and publisher of the Document as
given on its Title Page, then add an item describing the Modified
Version as stated in the previous sentence.
</para>
</listitem><listitem>
<para>Preserve the network location, if any, given in the Document for
public access to a Transparent copy of the Document, and likewise
the network locations given in the Document for previous versions
it was based on.  These may be placed in the &textldquo;History&textrdquo; section.
You may omit a network location for a work that was published at
least four years before the Document itself, or if the original
publisher of the version it refers to gives permission.
</para>
</listitem><listitem>
<para>For any section Entitled &textldquo;Acknowledgements&textrdquo; or &textldquo;Dedications&textrdquo;, Preserve
the Title of the section, and preserve in the section all the
substance and tone of each of the contributor acknowledgements and/or
dedications given therein.
</para>
</listitem><listitem>
<para>Preserve all the Invariant Sections of the Document,
unaltered in their text and in their titles.  Section numbers
or the equivalent are not considered part of the section titles.
</para>
</listitem><listitem>
<para>Delete any section Entitled &textldquo;Endorsements&textrdquo;.  Such a section
may not be included in the Modified Version.
</para>
</listitem><listitem>
<para>Do not retitle any existing section to be Entitled &textldquo;Endorsements&textrdquo; or
to conflict in title with any Invariant Section.
</para>
</listitem><listitem>
<para>Preserve any Warranty Disclaimers.
</para></listitem></enumerate>

<para>If the Modified Version includes new front-matter sections or
appendices that qualify as Secondary Sections and contain no material
copied from the Document, you may at your option designate some or all
of these sections as invariant.  To do this, add their titles to the
list of Invariant Sections in the Modified Version&textrsquo;s license notice.
These titles must be distinct from any other section titles.
</para>
<para>You may add a section Entitled &textldquo;Endorsements&textrdquo;, provided it contains
nothing but endorsements of your Modified Version by various
parties&textmdash;for example, statements of peer review or that the text has
been approved by an organization as the authoritative definition of a
standard.
</para>
<para>You may add a passage of up to five words as a Front-Cover Text, and a
passage of up to 25 words as a Back-Cover Text, to the end of the list
of Cover Texts in the Modified Version.  Only one passage of
Front-Cover Text and one of Back-Cover Text may be added by (or
through arrangements made by) any one entity.  If the Document already
includes a cover text for the same cover, previously added by you or
by arrangement made by the same entity you are acting on behalf of,
you may not add another; but you may replace the old one, on explicit
permission from the previous publisher that added the old one.
</para>
<para>The author(s) and publisher(s) of the Document do not by this License
give permission to use their names for publicity for or to assert or
imply endorsement of any Modified Version.
</para>
</listitem><listitem>
<para>COMBINING DOCUMENTS
</para>
<para>You may combine the Document with other documents released under this
License, under the terms defined in section 4 above for modified
versions, provided that you include in the combination all of the
Invariant Sections of all of the original documents, unmodified, and
list them all as Invariant Sections of your combined work in its
license notice, and that you preserve all their Warranty Disclaimers.
</para>
<para>The combined work need only contain one copy of this License, and
multiple identical Invariant Sections may be replaced with a single
copy.  If there are multiple Invariant Sections with the same name but
different contents, make the title of each such section unique by
adding at the end of it, in parentheses, the name of the original
author or publisher of that section if known, or else a unique number.
Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.
</para>
<para>In the combination, you must combine any sections Entitled &textldquo;History&textrdquo;
in the various original documents, forming one section Entitled
&textldquo;History&textrdquo;; likewise combine any sections Entitled &textldquo;Acknowledgements&textrdquo;,
and any sections Entitled &textldquo;Dedications&textrdquo;.  You must delete all
sections Entitled &textldquo;Endorsements.&textrdquo;
</para>
</listitem><listitem>
<para>COLLECTIONS OF DOCUMENTS
</para>
<para>You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this
License in the various documents with a single copy that is included in
the collection, provided that you follow the rules of this License for
verbatim copying of each of the documents in all other respects.
</para>
<para>You may extract a single document from such a collection, and distribute
it individually under this License, provided you insert a copy of this
License into the extracted document, and follow this License in all
other respects regarding verbatim copying of that document.
</para>
</listitem><listitem>
<para>AGGREGATION WITH INDEPENDENT WORKS
</para>
<para>A compilation of the Document or its derivatives with other separate
and independent documents or works, in or on a volume of a storage or
distribution medium, is called an &textldquo;aggregate&textrdquo; if the copyright
resulting from the compilation is not used to limit the legal rights
of the compilation&textrsquo;s users beyond what the individual works permit.
When the Document is included in an aggregate, this License does not
apply to the other works in the aggregate which are not themselves
derivative works of the Document.
</para>
<para>If the Cover Text requirement of section 3 is applicable to these
copies of the Document, then if the Document is less than one half of
the entire aggregate, the Document&textrsquo;s Cover Texts may be placed on
covers that bracket the Document within the aggregate, or the
electronic equivalent of covers if the Document is in electronic form.
Otherwise they must appear on printed covers that bracket the whole
aggregate.
</para>
</listitem><listitem>
<para>TRANSLATION
</para>
<para>Translation is considered a kind of modification, so you may
distribute translations of the Document under the terms of section 4.
Replacing Invariant Sections with translations requires special
permission from their copyright holders, but you may include
translations of some or all Invariant Sections in addition to the
original versions of these Invariant Sections.  You may include a
translation of this License, and all the license notices in the
Document, and any Warranty Disclaimers, provided that you also include
the original English version of this License and the original versions
of those notices and disclaimers.  In case of a disagreement between
the translation and the original version of this License or a notice
or disclaimer, the original version will prevail.
</para>
<para>If a section in the Document is Entitled &textldquo;Acknowledgements&textrdquo;,
&textldquo;Dedications&textrdquo;, or &textldquo;History&textrdquo;, the requirement (section 4) to Preserve
its Title (section 1) will typically require changing the actual
title.
</para>
</listitem><listitem>
<para>TERMINATION
</para>
<para>You may not copy, modify, sublicense, or distribute the Document
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense, or distribute it is void, and
will automatically terminate your rights under this License.
</para>
<para>However, if you cease all violation of this License, then your license
from a particular copyright holder is reinstated (a) provisionally,
unless and until the copyright holder explicitly and finally
terminates your license, and (b) permanently, if the copyright holder
fails to notify you of the violation by some reasonable means prior to
60 days after the cessation.
</para>
<para>Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.
</para>
<para>Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, receipt of a copy of some or all of the same material does
not give you any rights to use it.
</para>
</listitem><listitem>
<para>FUTURE REVISIONS OF THIS LICENSE
</para>
<para>The Free Software Foundation may publish new, revised versions
of the GNU Free Documentation License from time to time.  Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.  See
<uref><urefurl>http://www.gnu.org/copyleft/</urefurl></uref>.
</para>
<para>Each version of the License is given a distinguishing version number.
If the Document specifies that a particular numbered version of this
License &textldquo;or any later version&textrdquo; applies to it, you have the option of
following the terms and conditions either of that specified version or
of any later version that has been published (not as a draft) by the
Free Software Foundation.  If the Document does not specify a version
number of this License, you may choose any version ever published (not
as a draft) by the Free Software Foundation.  If the Document
specifies that a proxy can decide which future versions of this
License can be used, that proxy&textrsquo;s public statement of acceptance of a
version permanently authorizes you to choose that version for the
Document.
</para>
</listitem><listitem>
<para>RELICENSING
</para>
<para>&textldquo;Massive Multiauthor Collaboration Site&textrdquo; (or &textldquo;MMC Site&textrdquo;) means any
World Wide Web server that publishes copyrightable works and also
provides prominent facilities for anybody to edit those works.  A
public wiki that anybody can edit is an example of such a server.  A
&textldquo;Massive Multiauthor Collaboration&textrdquo; (or &textldquo;MMC&textrdquo;) contained in the
site means any set of copyrightable works thus published on the MMC
site.
</para>
<para>&textldquo;CC-BY-SA&textrdquo; means the Creative Commons Attribution-Share Alike 3.0
license published by Creative Commons Corporation, a not-for-profit
corporation with a principal place of business in San Francisco,
California, as well as future copyleft versions of that license
published by that same organization.
</para>
<para>&textldquo;Incorporate&textrdquo; means to publish or republish a Document, in whole or
in part, as part of another Document.
</para>
<para>An MMC is &textldquo;eligible for relicensing&textrdquo; if it is licensed under this
License, and if all works that were first published under this License
somewhere other than this MMC, and subsequently incorporated in whole
or in part into the MMC, (1) had no cover texts or invariant sections,
and (2) were thus incorporated prior to November 1, 2008.
</para>
<para>The operator of an MMC Site may republish an MMC contained in the site
under CC-BY-SA on the same site at any time before August 1, 2009,
provided the MMC is eligible for relicensing.
</para>
</listitem></enumerate>

<page></page>
<heading spaces=" ">ADDENDUM: How to use this License for your documents</heading>

<para>To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and
license notices just after the title page:
</para>
<smallexample endspaces=" ">
<group endspaces=" ">
<pre xml:space="preserve">  Copyright (C)  <var>year</var>  <var>your name</var>.
  Permission is granted to copy, distribute and/or modify this document
  under the terms of the GNU Free Documentation License, Version 1.3
  or any later version published by the Free Software Foundation;
  with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
  Texts.  A copy of the license is included in the section entitled ``GNU
  Free Documentation License''.
</pre></group>
</smallexample>

<para>If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the &textldquo;with&dots;Texts.&textrdquo;&noeos; line with this:
</para>
<smallexample endspaces=" ">
<group endspaces=" ">
<pre xml:space="preserve">    with the Invariant Sections being <var>list their titles</var>, with
    the Front-Cover Texts being <var>list</var>, and with the Back-Cover Texts
    being <var>list</var>.
</pre></group>
</smallexample>

<para>If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.
</para>
<para>If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License,
to permit their use in free software.
</para>
<!-- c Local Variables: -->
<!-- c ispell-local-pdict: "ispell-dict" -->
<!-- c End: -->


<!-- c - -->
</appendix>
<node name="Index" spaces=" "><nodename>Index</nodename><nodeprev automatic="on">GNU FDL</nodeprev><nodeup automatic="on">Top</nodeup></node>
<unnumbered spaces=" "><sectiontitle>Index</sectiontitle>

<printindex value="cp" line=" cp"></printindex>

</unnumbered>
<bye></bye>
</texinfo>
